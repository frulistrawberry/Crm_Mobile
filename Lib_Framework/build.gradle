plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.baihe.lib_framework'
    compileSdk rootProject.android.compileSdk

    defaultConfig {
        minSdkVersion rootProject.android.minSdk
        targetSdkVersion rootProject.android.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {


    implementation rootProject.depsLibs.logCore

    api fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.depsLibs.junit
    api rootProject.depsLibs.extJunit
    api rootProject.depsLibs.espressoCore
    api rootProject.depsLibs.coreKtx
    api rootProject.depsLibs.appcompat
    api rootProject.depsLibs.material
    api rootProject.depsLibs.liveDataKtx
    api rootProject.depsLibs.viewModelKtx
    api rootProject.depsLibs.gson
    api rootProject.depsLibs.mmkv

    api rootProject.depsLibs.refreshLayout
    api rootProject.depsLibs.refreshFooter
    api rootProject.depsLibs.tbssdk
    api rootProject.depsLibs.LoadingStateView

    api project(path: ':Lib_Network')
    api project(path: ':Lib_ImageLoader')
}

publishing {
    publications {
        Arr(MavenPublication) {
            groupId 'com.wedding.crm.lib'
            artifactId 'framework'
            version rootProject.depsLibs.frameworkLibVersion
            artifact("$buildDir/outputs/aar/Lib_Framework-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                def scopes = [configurations.implementation]
                if (configurationÃ¥s.hasProperty("api")) {
                    scopes.add(configurations.api)
                }
                if (configurations.hasProperty("implementation")) {
                    scopes.add(configurations.implementation)
                }
                if (configurations.hasProperty("debugImplementation")) {
                    scopes.add(configurations.debugImplementation)
                }
                if (configurations.hasProperty("releaseImplementation")) {
                    scopes.add(configurations.releaseImplementation)
                }

                scopes.each { scope ->
                    scope.allDependencies.each {
                        if (it instanceof ModuleDependency) {
                            boolean isTransitive = ((ModuleDependency) it).transitive
                            if (!isTransitive) {
                                println "<<<< not transitive dependency: [${it.group}, ${it.name}, ${it.version}]"
                                return
                            }
                        }

                        if (it.group == "${project.rootProject.name}.libs" || it.version == 'unspecified') {
                            return
                        }

                        if (it.group && it.name && it.version) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            dependencyNode.appendNode('scope', scope.name)
                        }
                    }
                }
            }

        }


    }
    repositories {
        maven {
            allowInsecureProtocol = true
            url 'http://10.240.210.158:8081/repository/jiayuan/'
            credentials {
                username = 'jiayuandev'
                password = 'jyandroid'
            }
        }
    }
}
