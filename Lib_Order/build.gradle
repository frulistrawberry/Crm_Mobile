apply from: "../common_config.gradle"
android {
    namespace 'com.baihe.lib_order'
    defaultConfig {
        if (isBuildModule.toBoolean()) {
            applicationId "com.baihe.lib_order"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //统一资源前缀，规范资源引用
    resourcePrefix "order_"
}

dependencies {
    implementation project(path: ':Lib_Common')
    implementation rootProject.depsLibs.MPChartAndroid
}

publishing {
    publications {
        Arr(MavenPublication) {
            groupId 'com.wedding.crm.lib'
            artifactId 'order'
            version rootProject.depsLibs.orderLibVersion
            artifact("$buildDir/outputs/aar/Lib_Order-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                def scopes = [configurations.implementation]
                if (configurations.hasProperty("api")) {
                    scopes.add(configurations.api)
                }
                if (configurations.hasProperty("implementation")) {
                    scopes.add(configurations.implementation)
                }
                if (configurations.hasProperty("debugImplementation")) {
                    scopes.add(configurations.debugImplementation)
                }
                if (configurations.hasProperty("releaseImplementation")) {
                    scopes.add(configurations.releaseImplementation)
                }

                scopes.each { scope ->
                    scope.allDependencies.each {
                        if (it instanceof ModuleDependency) {
                            boolean isTransitive = ((ModuleDependency) it).transitive
                            if (!isTransitive) {
                                println "<<<< not transitive dependency: [${it.group}, ${it.name}, ${it.version}]"
                                return
                            }
                        }

                        if (it.group == "${project.rootProject.name}.libs" || it.version == 'unspecified') {
                            return
                        }

                        if (it.group && it.name && it.version) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            dependencyNode.appendNode('scope', scope.name)
                        }
                    }
                }
            }

        }


    }
    repositories {
        maven {
            allowInsecureProtocol = true
            url 'http://10.240.210.158:8081/repository/jiayuan/'
            credentials {
                username = 'jiayuandev'
                password = 'jyandroid'
            }
        }
    }
}
